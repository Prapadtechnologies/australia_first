{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\australia_first\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { RouterProvider } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Router from \"../src/Navigation\";\nimport { ApiUrl } from \"./Constants\";\nimport { AuthContext } from \"./Context/AuthContext\";\nimport { apiCall } from \"./Utilites/Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [accessToken, setAccessToken] = useState(localStorage.getItem(\"accessToken\"));\n  const doLogin = async payload => {\n    // const accessToken = 'dwedewdwedewdwedewdn';\n    // localStorage.setItem(\"accessToken\", accessToken);\n    // setAccessToken(accessToken);\n    // toast.success('Login success');\n\n    const resp = await apiCall(ApiUrl.login, payload);\n    if (resp.status) {\n      const accessToken = resp.data.token;\n      localStorage.setItem(\"accessToken\", accessToken);\n      setAccessToken(accessToken);\n      toast.success(resp.message);\n    } else {\n      toast.error(resp.message);\n    }\n  };\n  const doLogout = async () => {\n    localStorage.removeItem(\"accessToken\", accessToken);\n    setAccessToken(null);\n    // const resp = await apiCall(ApiUrl.logout,{});\n    // console.log(resp);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      accessToken,\n      doLogin,\n      doLogout\n    },\n    children: [/*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: Router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xBKGRVZAQZ53jxeUmrlnoS0TdK0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","RouterProvider","toast","ToastContainer","Router","ApiUrl","AuthContext","apiCall","jsxDEV","_jsxDEV","App","_s","accessToken","setAccessToken","localStorage","getItem","doLogin","payload","resp","login","status","data","token","setItem","success","message","error","doLogout","removeItem","Provider","value","children","router","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/react/australia_first/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { RouterProvider } from \"react-router-dom\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Router from \"../src/Navigation\";\nimport { ApiUrl } from \"./Constants\";\nimport { AuthContext } from \"./Context/AuthContext\";\nimport { apiCall } from \"./Utilites/Api\";\n\nfunction App() {\n  const [accessToken, setAccessToken] = useState(\n    localStorage.getItem(\"accessToken\")\n  );\n\n  const doLogin = async (payload) => {\n    // const accessToken = 'dwedewdwedewdwedewdn';\n    // localStorage.setItem(\"accessToken\", accessToken);\n    // setAccessToken(accessToken);\n    // toast.success('Login success');\n\n    const resp = await apiCall(ApiUrl.login, payload);\n    if (resp.status) {\n      const accessToken = resp.data.token;\n      localStorage.setItem(\"accessToken\", accessToken);\n      setAccessToken(accessToken);\n      toast.success(resp.message);\n    } else {\n      toast.error(resp.message);\n    }\n  };\n\n  const doLogout = async () => {\n    localStorage.removeItem(\"accessToken\", accessToken);\n    setAccessToken(null);\n    // const resp = await apiCall(ApiUrl.logout,{});\n    // console.log(resp);\n  };\n\n  return (\n    <AuthContext.Provider value={{ accessToken, doLogin, doLogout }}>\n      <RouterProvider router={Router} />\n      <ToastContainer />\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,KAAK,EAAEC,cAAc,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAE9C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,WAAW,QAAQ,uBAAuB;AACnD,SAASC,OAAO,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAC5Ce,YAAY,CAACC,OAAO,CAAC,aAAa,CACpC,CAAC;EAED,MAAMC,OAAO,GAAG,MAAOC,OAAO,IAAK;IACjC;IACA;IACA;IACA;;IAEA,MAAMC,IAAI,GAAG,MAAMX,OAAO,CAACF,MAAM,CAACc,KAAK,EAAEF,OAAO,CAAC;IACjD,IAAIC,IAAI,CAACE,MAAM,EAAE;MACf,MAAMR,WAAW,GAAGM,IAAI,CAACG,IAAI,CAACC,KAAK;MACnCR,YAAY,CAACS,OAAO,CAAC,aAAa,EAAEX,WAAW,CAAC;MAChDC,cAAc,CAACD,WAAW,CAAC;MAC3BV,KAAK,CAACsB,OAAO,CAACN,IAAI,CAACO,OAAO,CAAC;IAC7B,CAAC,MAAM;MACLvB,KAAK,CAACwB,KAAK,CAACR,IAAI,CAACO,OAAO,CAAC;IAC3B;EACF,CAAC;EAED,MAAME,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3Bb,YAAY,CAACc,UAAU,CAAC,aAAa,EAAEhB,WAAW,CAAC;IACnDC,cAAc,CAAC,IAAI,CAAC;IACpB;IACA;EACF,CAAC;EAED,oBACEJ,OAAA,CAACH,WAAW,CAACuB,QAAQ;IAACC,KAAK,EAAE;MAAElB,WAAW;MAAEI,OAAO;MAAEW;IAAS,CAAE;IAAAI,QAAA,gBAC9DtB,OAAA,CAACR,cAAc;MAAC+B,MAAM,EAAE5B;IAAO;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC3B,OAAA,CAACN,cAAc;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAE3B;AAACzB,EAAA,CAnCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}