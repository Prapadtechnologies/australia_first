{"ast":null,"code":"import axios from\"axios\";import{BASE_URL}from\"../../Constants\";const postHeaders=()=>{const accessToken=localStorage.getItem(\"accessToken\");const headers={\"Content-Type\":\"application/x-www-form-urlencoded\"};// if (accessToken && accessToken !== \"\") {\n//   headers[\"X_AUTH_TOKEN\"] = accessToken;\n// }\nreturn{headers};};const getHeaders=()=>{// const accessToken = localStorage.getItem(\"accessToken\");\nconst headers={\"Content-Type\":\"application/json\"};// if (accessToken && accessToken !== \"\") {\n//   headers[\"X_AUTH_TOKEN\"] = accessToken;\n// }\nreturn{headers};};export const getApiCall=apiUrl=>{return new Promise((resolve,reject)=>{try{axios.get(BASE_URL+apiUrl,getHeaders()).then(response=>{resolve(response.data);}).catch(error=>{reject(error);});}catch(e){console.log(e);}});};export const apiCall=(apiUrl,postData)=>{return new Promise((resolve,reject)=>{try{axios.post(BASE_URL+apiUrl,JSON.stringify(postData),postHeaders()).then(response=>{resolve(response.data);}).catch(error=>{reject(error);});}catch(e){console.log(e);}});};","map":{"version":3,"names":["axios","BASE_URL","postHeaders","accessToken","localStorage","getItem","headers","getHeaders","getApiCall","apiUrl","Promise","resolve","reject","get","then","response","data","catch","error","e","console","log","apiCall","postData","post","JSON","stringify"],"sources":["D:/react/australia_first/src/Utilites/Api/index.js"],"sourcesContent":["import axios from \"axios\";\n\nimport { BASE_URL } from \"../../Constants\";\n\nconst postHeaders = () => {\n  const accessToken = localStorage.getItem(\"accessToken\");\n  const headers = {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n  };\n  // if (accessToken && accessToken !== \"\") {\n  //   headers[\"X_AUTH_TOKEN\"] = accessToken;\n  // }\n  return { headers };\n};\n\nconst getHeaders = () => {\n  // const accessToken = localStorage.getItem(\"accessToken\");\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n  // if (accessToken && accessToken !== \"\") {\n  //   headers[\"X_AUTH_TOKEN\"] = accessToken;\n  // }\n  return { headers };\n};\n\nexport const getApiCall = (apiUrl) => {\n  return new Promise((resolve, reject) => {\n    try {\n      axios\n        .get(BASE_URL + apiUrl, getHeaders())\n        .then((response) => {\n          resolve(response.data);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  });\n};\n\nexport const apiCall = (apiUrl, postData) => {\n  return new Promise((resolve, reject) => {\n    try {\n      axios\n        .post(BASE_URL + apiUrl, JSON.stringify(postData), postHeaders())\n        .then((response) => {\n          resolve(response.data);\n        })\n        .catch((error) => {\n          reject(error);\n        });\n    } catch (e) {\n      console.log(e);\n    }\n  });\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,OAASC,QAAQ,KAAQ,iBAAiB,CAE1C,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACvD,KAAM,CAAAC,OAAO,CAAG,CACd,cAAc,CAAE,mCAClB,CAAC,CACD;AACA;AACA;AACA,MAAO,CAAEA,OAAQ,CAAC,CACpB,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACvB;AACA,KAAM,CAAAD,OAAO,CAAG,CACd,cAAc,CAAE,kBAClB,CAAC,CACD;AACA;AACA;AACA,MAAO,CAAEA,OAAQ,CAAC,CACpB,CAAC,CAED,MAAO,MAAM,CAAAE,UAAU,CAAIC,MAAM,EAAK,CACpC,MAAO,IAAI,CAAAC,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtC,GAAI,CACFZ,KAAK,CACFa,GAAG,CAACZ,QAAQ,CAAGQ,MAAM,CAAEF,UAAU,CAAC,CAAC,CAAC,CACpCO,IAAI,CAAEC,QAAQ,EAAK,CAClBJ,OAAO,CAACI,QAAQ,CAACC,IAAI,CAAC,CACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CAChBN,MAAM,CAACM,KAAK,CAAC,CACf,CAAC,CAAC,CACN,CAAE,MAAOC,CAAC,CAAE,CACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAChB,CACF,CAAC,CAAC,CACJ,CAAC,CAED,MAAO,MAAM,CAAAG,OAAO,CAAGA,CAACb,MAAM,CAAEc,QAAQ,GAAK,CAC3C,MAAO,IAAI,CAAAb,OAAO,CAAC,CAACC,OAAO,CAAEC,MAAM,GAAK,CACtC,GAAI,CACFZ,KAAK,CACFwB,IAAI,CAACvB,QAAQ,CAAGQ,MAAM,CAAEgB,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAErB,WAAW,CAAC,CAAC,CAAC,CAChEY,IAAI,CAAEC,QAAQ,EAAK,CAClBJ,OAAO,CAACI,QAAQ,CAACC,IAAI,CAAC,CACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,EAAK,CAChBN,MAAM,CAACM,KAAK,CAAC,CACf,CAAC,CAAC,CACN,CAAE,MAAOC,CAAC,CAAE,CACVC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAChB,CACF,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}